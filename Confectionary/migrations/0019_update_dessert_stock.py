# Generated by Django 5.1.7 on 2025-04-02 10:10

from django.db import migrations


def set_initial_dessert_stock(apps, schema_editor):
    Product = apps.get_model("Confectionary", "Product")
    Category = apps.get_model("Confectionary", "Category")
    db_alias = schema_editor.connection.alias 

    try:
        dessert_category = Category.objects.using(db_alias).get(name__iexact="Десерты")

        updated_count = (
            Product.objects.using(db_alias)
            .filter(category=dessert_category)
            .update(count_in_stock=5)
        )

        if updated_count > 0:
            print(
                f"\n  Установлено count_in_stock=5 для {updated_count} продуктов в категории 'Десерты'."
            )
        else:
            print(
                f"\n  Продукты в категории 'Десерты' для обновления count_in_stock не найдены."
            )

    except Category.DoesNotExist:
        print(
            f"\n  Предупреждение: Категория 'Десерты' не найдена. Пропуск установки начального количества."
        )
    except Exception as e:
        print(f"\n  Ошибка при обновлении количества десертов: {e}")


def reverse_set_initial_stock(apps, schema_editor):
    Product = apps.get_model("Confectionary", "Product")
    Category = apps.get_model("Confectionary", "Category")
    db_alias = schema_editor.connection.alias

    try:
        dessert_category = Category.objects.using(db_alias).get(name__iexact="Десерты")
        Product.objects.using(db_alias).filter(
            category=dessert_category, count_in_stock=5
        ).update(count_in_stock=None)
        print(
            f"\n  Откат: Установлено count_in_stock=None для продуктов категории 'Десерты' (где было 5)."
        )
    except Category.DoesNotExist:
        pass 


class Migration(migrations.Migration):

    dependencies = [
        ("Confectionary", "0018_product_count_in_stock"),
    ]

    operations = [
        migrations.RunPython(
            set_initial_dessert_stock, reverse_code=reverse_set_initial_stock
        ),
    ]
